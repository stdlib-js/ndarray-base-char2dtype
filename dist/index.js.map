{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar objectInverse = require( '@stdlib/utils-object-inverse' );\nvar dtypeChar = require( '@stdlib/ndarray-base-dtype-char' );\n\n\n// VARIABLES //\n\nvar TABLE;\n\n\n// MAIN //\n\n/**\n* Returns the data type string associated with a provided single letter abbreviation.\n*\n* @param {string} ch - single letter character abbreviation\n* @returns {(Object|string|null)} data type string\n*\n* @example\n* var obj = char2dtype();\n* // returns {...}\n*\n* @example\n* var out = char2dtype( 'd' );\n* // returns 'float64'\n*\n* out = char2dtype( '(' );\n* // returns null\n*/\nfunction char2dtype( ch ) {\n\tif ( arguments.length === 0 ) {\n\t\treturn objectInverse( dtypeChar() );\n\t}\n\tif ( TABLE === void 0 ) {\n\t\tTABLE = objectInverse( dtypeChar() );\n\t}\n\treturn TABLE[ ch ] || null;\n}\n\n\n// EXPORTS //\n\nmodule.exports = char2dtype;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the data type string associated with a provided single letter abbreviation.\n*\n* @module @stdlib/ndarray-base-char2dtype\n*\n* @example\n* var char2dtype = require( '@stdlib/ndarray-base-char2dtype' );\n*\n* var out = char2dtype();\n* // returns {...}\n*\n* @example\n* var char2dtype = require( '@stdlib/ndarray-base-char2dtype' );\n*\n* var out = char2dtype( 'd' );\n* // returns 'float64'\n*\n* out = char2dtype( '(' );\n* // returns null\n*/\n\n// MODULES //\n\nvar char2dtype = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = char2dtype;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,8BAA+B,EACxDC,EAAY,QAAS,iCAAkC,EAKvDC,EAsBJ,SAASC,EAAYC,EAAK,CACzB,OAAK,UAAU,SAAW,EAClBJ,EAAeC,EAAU,CAAE,GAE9BC,IAAU,SACdA,EAAQF,EAAeC,EAAU,CAAE,GAE7BC,EAAOE,CAAG,GAAK,KACvB,CAKAL,EAAO,QAAUI,ICpBjB,IAAIE,EAAa,IAKjB,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "objectInverse", "dtypeChar", "TABLE", "char2dtype", "ch", "char2dtype"]
}
